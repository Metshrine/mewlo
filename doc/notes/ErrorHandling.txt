This document describes the current conventions and policies for handling errors.
//---------------------------------------------------------------------------

See ErrorHandling_Discussion.txt file for more discussion of options for handling errors.




//---------------------------------------------------------------------------
1. When Mewlo functions want to signify an error, they should so by returning an error value, either as sole return value or as a tuple.
The failure value MUST be None on success (not True or False!).
On failure, the failure value *CAN* be anything other than None, including a string describing the failure, BUT SEE NEXT SECTION FOR BEST PRACTICE.

Call examples:
    (value, failure) = myfunc(a,b)
    failure = myproc(a,b)


In the function it would look like:

def myfunc(a,b):
	  # success
    return (a+b, None)
    # failure
    return (None, "bad args passed")


//---------------------------------------------------------------------------




//---------------------------------------------------------------------------
2. Best practice of returning failure codes, return an Event object as a failure.


It is permissable to use any object for the failure return value IFF the function is basically an internal function that will be called frequently and by known callers, and utmost speed is required, or in cases where the nature of the failure will always be known and is not important.

In all other cases, the failure return value should derive from the Event class.
By doing so, we ensure a standard way of describing failures that makes it easy to display and log them, assign severity levels, add extra info, add call stack trace info, etc.

A simple wrapper function to create a failure event can be found in events.py, called EFailure, and is used as follows:
    return EFailure("failure message goes here.")
//---------------------------------------------------------------------------



//---------------------------------------------------------------------------
3. Aesthetic consistency.

a)
The name of the variable holding the failure value should be "failure"

b)
After calling a function that returns a failure code, prefer checking for success first followed by error, and by writing "if failure == None:"
eg.:
    failure = myproc(a,b)
    if failure == None:
			  # success
        stuff to do here
    else:
        # failure
        stuff to do here


//---------------------------------------------------------------------------
